name: Qt-GammaRay Builds
on: [push]


jobs:
  GammaRay-x64:
    runs-on: windows-2016
    if: "startsWith(github.event.head_commit.message, '[build]')"
    steps:
      - name: Install jom
        shell: powershell
        run: |
          Set-Location C:\
          Invoke-WebRequest 'http://download.qt.io/official_releases/jom/jom.zip' -OutFile .\jom.zip
          Expand-Archive .\jom.zip
          Remove-Item .\jom.zip
          Get-ChildItem $(pwd)
          Get-ChildItem .\jom
          Get-PSDrive
      - name: Clone Qt 5.6.3
        shell: cmd
        run: |
          @echo on
          C:
          mkdir C:\Qt\src\
          cd C:\Qt\src\
          git clone -b v5.6.3 https://code.qt.io/qt/qt5.git 5.6.3
          cd C:\Qt\src\5.6.3\
          git submodule update --init --recursive
      - name: Clone latest Qt-GammaRay
        shell: cmd
        run: |
          @echo on
          C:
          cd C:\
          git clone -b v2.11.2 https://github.com/KDAB/GammaRay.git
      - name: Build Qt 5.6.3 and Qt-GammaRay
        shell: cmd
        run: |
          @echo on
          C:
          call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
          set _ROOT=C:\Qt\build\5.6.3
          set PATH=%_ROOT%\qtrepotools\bin;%_ROOT%\qtbase\bin;%_ROOT%\gnuwin32\bin;%PATH%
          set QMAKESPEC=win32-msvc2015
          set _ROOT=

          mkdir C:\Qt\build\5.6.3\
          cd C:\Qt\build\5.6.3\
          call C:\Qt\src\5.6.3\configure.bat -release -nomake tests -nomake examples -qtnamespace QT -confirm-license -accessibility -opensource -platform win32-msvc2015 -opengl desktop -prefix .\
          
          cd C:\Qt\build\5.6.3\
          C:\jom\jom.exe -j%NUMBER_OF_PROCESSORS%
          C:\jom\jom.exe -j%NUMBER_OF_PROCESSORS% install
          
          mkdir C:\artifacts\
          mkdir C:\GammaRay\build\
          cd C:\GammaRay\build\
          cmake -G "NMake Makefiles" "-DCMAKE_BUILD_TYPE=Release" "-DCMAKE_PREFIX_PATH=C:\Qt\build\5.6.3\qtbase\bin" "-DCMAKE_INSTALL_PREFIX=C:\artifacts" ..
          nmake
          nmake install
      - name: Copy Qt DLLs
        shell: powershell
        run: |
          $env:Path = "C:\Qt\build\5.6.3\qtbase\bin;" + $env:Path
          foreach ($_ in Get-ChildItem "C:\artifacts\bin" -Include *.exe,*.dll -Recurse) {
              & "C:\Qt\build\5.6.3\qtbase\bin\bin\windeployqt.exe" --release $_
          }
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: qt-GammaRay-x64-for-ida.zip
          path: C:\artifacts
